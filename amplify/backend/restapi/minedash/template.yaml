AWSTemplateFormatVersion: 2010-09-09
Description: |
  "MineDash REST API \n"
Parameters:
  ProjectName:
    Default: NONE
    Type: String
    Description: A description to identify project
  AuthCognitoUserPoolId:
    Type: String
    Description: The id of an existing User Pool to connect. If this is changed, a user pool will not be created for you.
    Default: NONE
  env:
    Default: NONE
    Type: String
    Description: 'A description to identify environment (e.g. dev, prod)'

Outputs:
  ApiUrl:
    Value: !Sub 'https://${ApiGw}.execute-api.${AWS::Region}.amazonaws.com/v1/'

Resources:
  ApiGwDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn: ApiGwMethod
    Properties:
      RestApiId: !Ref ApiGw
      Description: !Sub '${ProjectName} ${env} Rest Api Deployment'
      StageName: Stage

  ApiGwAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    DependsOn: ApiGwDeployment
    Properties:
      IdentitySource: method.request.header.authorization
      Name: CognitoAuthorizer
      ProviderARNs:
        - !Sub
            - 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${PoolApi}'
            - { PoolApi: !Ref AuthCognitoUserPoolId }
      RestApiId: !Ref ApiGw
      Type: COGNITO_USER_POOLS

  ApiGwModel:
    Type: AWS::ApiGateway::Model
    Properties:
      ContentType: 'application/json'
      RestApiId: !Ref ApiGw
      Schema: {}

  ApiGwResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt ApiGw.RootResourceId
      PathPart: 'mock'
      RestApiId: !Ref ApiGw

  ApiGwMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: false
      AuthorizationType: NONE
      HttpMethod: POST
      Integration:
        ConnectionType: INTERNET
        IntegrationResponses:
          - ResponseTemplates:
              application/json: "{\"message\": \"OK\"}"
            SelectionPattern: '2\d{2}'
            StatusCode: 200
          - ResponseTemplates:
              application/json: "{\"message\": \"Internal Server Error\"}"
            SelectionPattern: '5\d{2}'
            StatusCode: 500
        PassthroughBehavior: WHEN_NO_TEMPLATES
        RequestTemplates:
          application/json: "{\"statusCode\": $input.json('$.statusCode'), \"message\": $input.json('$.message')}"
        Type: MOCK
        TimeoutInMillis: 29000
      MethodResponses:
        - ResponseModels:
            application/json: !Ref ApiGwModel
          StatusCode: 200
        - ResponseModels:
            application/json: !Ref ApiGwModel
          StatusCode: 500
      OperationName: 'mock'
      ResourceId: !Ref ApiGwResource
      RestApiId: !Ref ApiGw
  
  ApiGwv1Stage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref ApiGwDeployment
      RestApiId: !Ref ApiGw
      StageName: v1
  
  ApiGw:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: !Sub '${ProjectName}-${env}-api'

  ApiGwIdParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Name: !Sub '/amplify/${ProjectName}/apiId'
      Value: !Ref ApiGw
    DependsOn: ApiGw  

  ApiGwUrlParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Name: !Sub '/amplify/${ProjectName}/apiUrl'
      Value: !Sub 'https://${ApiGw}.execute-api.${AWS::Region}.amazonaws.com/v1/'
    DependsOn: ApiGw  
  
  ApiGwParentIdParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Name: !Sub '/amplify/${ProjectName}/apiParentId'
      Value: !GetAtt ApiGw.RootResourceId
    DependsOn: ApiGw 

  ApiGwAuthorizerIdParameter:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Type: String
      Name: !Sub '/amplify/${ProjectName}/apiAuthId'
      Value: !Ref ApiGwAuthorizer
    DependsOn: ApiGw 