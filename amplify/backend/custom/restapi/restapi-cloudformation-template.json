{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "env": {
      "Type": "String"
    },
    "ProjectName": {
      "Type": "String",
      "Default": "geckocraft"
    },
    "authgeckocraft32bfb799IdentityPoolId": {
      "Type": "String",
      "Description": "Input parameter describing IdentityPoolId attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799IdentityPoolName": {
      "Type": "String",
      "Description": "Input parameter describing IdentityPoolName attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799HostedUIDomain": {
      "Type": "String",
      "Description": "Input parameter describing HostedUIDomain attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799OAuthMetadata": {
      "Type": "String",
      "Description": "Input parameter describing OAuthMetadata attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799UserPoolId": {
      "Type": "String",
      "Description": "Input parameter describing UserPoolId attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799UserPoolArn": {
      "Type": "String",
      "Description": "Input parameter describing UserPoolArn attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799UserPoolName": {
      "Type": "String",
      "Description": "Input parameter describing UserPoolName attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799AppClientIDWeb": {
      "Type": "String",
      "Description": "Input parameter describing AppClientIDWeb attribute for auth/geckocraft32bfb799 resource"
    },
    "authgeckocraft32bfb799AppClientID": {
      "Type": "String",
      "Description": "Input parameter describing AppClientID attribute for auth/geckocraft32bfb799 resource"
    }
  },
  "Outputs": {
    "ApiUrl": {
        "Value": {
            "Fn::Sub": "https://${ApiGw}.execute-api.${AWS::Region}.amazonaws.com/v1/"
        }
    }
},
"Resources": {
    "ApiGwDeployment": {
        "Type": "AWS::ApiGateway::Deployment",
        "DependsOn": "ApiGwMethod",
        "Properties": {
            "RestApiId": {
                "Ref": "ApiGw"
            },
            "Description": {
                "Fn::Sub": "${ProjectName} ${env} Rest Api Deployment"
            },
            "StageName": "Stage"
        }
    },
    "ApiGwAuthorizer": {
        "Type": "AWS::ApiGateway::Authorizer",
        "DependsOn": "ApiGwDeployment",
        "Properties": {
            "IdentitySource": "method.request.header.authorization",
            "Name": "CognitoAuthorizer",
            "ProviderARNs": [
                {
                    "Fn::Sub": [
                        "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${PoolApi}",
                        {
                            "PoolApi": {
                                "Ref": "authgeckocraft32bfb799IdentityPoolId"
                            }
                        }
                    ]
                }
            ],
            "RestApiId": {
                "Ref": "ApiGw"
            },
            "Type": "COGNITO_USER_POOLS"
        }
    },
    "ApiGwModel": {
        "Type": "AWS::ApiGateway::Model",
        "Properties": {
            "ContentType": "application/json",
            "RestApiId": {
                "Ref": "ApiGw"
            },
            "Schema": {}
        }
    },
    "ApiGwResource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
            "ParentId": {
                "Fn::GetAtt": [
                    "ApiGw",
                    "RootResourceId"
                ]
            },
            "PathPart": "mock",
            "RestApiId": {
                "Ref": "ApiGw"
            }
        }
    },
    "ApiGwMethod": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
            "ApiKeyRequired": false,
            "AuthorizationType": "NONE",
            "HttpMethod": "POST",
            "Integration": {
                "ConnectionType": "INTERNET",
                "IntegrationResponses": [
                    {
                        "ResponseTemplates": {
                            "application/json": "{\"message\": \"OK\"}"
                        },
                        "SelectionPattern": "2\\d{2}",
                        "StatusCode": 200
                    },
                    {
                        "ResponseTemplates": {
                            "application/json": "{\"message\": \"Internal Server Error\"}"
                        },
                        "SelectionPattern": "5\\d{2}",
                        "StatusCode": 500
                    }
                ],
                "PassthroughBehavior": "WHEN_NO_TEMPLATES",
                "RequestTemplates": {
                    "application/json": "{\"statusCode\": $input.json('$.statusCode'), \"message\": $input.json('$.message')}"
                },
                "Type": "MOCK",
                "TimeoutInMillis": 29000
            },
            "MethodResponses": [
                {
                    "ResponseModels": {
                        "application/json": {
                            "Ref": "ApiGwModel"
                        }
                    },
                    "StatusCode": 200
                },
                {
                    "ResponseModels": {
                        "application/json": {
                            "Ref": "ApiGwModel"
                        }
                    },
                    "StatusCode": 500
                }
            ],
            "OperationName": "mock",
            "ResourceId": {
                "Ref": "ApiGwResource"
            },
            "RestApiId": {
                "Ref": "ApiGw"
            }
        }
    },
    "ApiGwv1Stage": {
        "Type": "AWS::ApiGateway::Stage",
        "Properties": {
            "DeploymentId": {
                "Ref": "ApiGwDeployment"
            },
            "RestApiId": {
                "Ref": "ApiGw"
            },
            "StageName": "v1"
        }
    },
    "ApiGw": {
        "Type": "AWS::ApiGateway::RestApi",
        "Properties": {
            "Name": {
                "Fn::Sub": "${ProjectName}-${env}-api"
            }
        }
    },
    "ApiGwIdParameter": {
        "Type": "AWS::SSM::Parameter",
        "Properties": {
            "Type": "String",
            "Name": {
                "Fn::Sub": "/amplify/${ProjectName}/apiId"
            },
            "Value": {
                "Ref": "ApiGw"
            }
        },
        "DependsOn": "ApiGw"
    },
    "ApiGwUrlParameter": {
        "Type": "AWS::SSM::Parameter",
        "Properties": {
            "Type": "String",
            "Name": {
                "Fn::Sub": "/amplify/${ProjectName}/apiUrl"
            },
            "Value": {
                "Fn::Sub": "https://${ApiGw}.execute-api.${AWS::Region}.amazonaws.com/v1/"
            }
        },
        "DependsOn": "ApiGw"
    },
    "ApiGwParentIdParameter": {
        "Type": "AWS::SSM::Parameter",
        "Properties": {
            "Type": "String",
            "Name": {
                "Fn::Sub": "/amplify/${ProjectName}/apiParentId"
            },
            "Value": {
                "Fn::GetAtt": [
                    "ApiGw",
                    "RootResourceId"
                ]
            }
        },
        "DependsOn": "ApiGw"
    },
    "ApiGwAuthorizerIdParameter": {
        "Type": "AWS::SSM::Parameter",
        "Properties": {
            "Type": "String",
            "Name": {
                "Fn::Sub": "/amplify/${ProjectName}/apiAuthId"
            },
            "Value": {
                "Ref": "ApiGwAuthorizer"
            }
        },
        "DependsOn": "ApiGw"
    }
}
}